ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡCOPY BY VALUEㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

1) let original = "안녕하세요";
2) let clone = original;

console.log(original);
console.log(clone);

3) clone += " 안유진입니다.";
----------------------------------------------

1) 프리미티브 값으로 진행 - 변수선언과 초기화
2) 클론변수에 오리지널변수를 복사
3) 클론변수에 글자를 추가

----------------------------------------------

copy by value의 경우
클론 데이터셀에 값을 그대로 복사
클론변수에 글자를 추가한 것을 동일한 클론 데이터셀에 저장 
오리지널변수는 안녕하세요가 그대로 남아있음


ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡCOPY BY REFERENCEㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

1) let originalObj = {
    name: "안유진",
    group: "아이브",
};
2) let cloneObj = originalObj;

console.log(originalObj);
console.log(cloneObj);

3) originalObj["group"] = "코드팩토리";
----------------------------------------------

1) 오리지널 오브젝트 선언
2) 오리지널 오브젝트를 클론에 복사
3) 오리지널 오브젝트의 그룹 키를 변경

----------------------------------------------

copy by reference의 경우
오리지널의 키, 벨류 값들을 모아 메모리(3)에 할당
그러나 오리지널 오브젝트 본체는 다른 메모리(1)에 할당 
본체(1) 주소는 키, 벨류 값들 모아놓은 메모리의 주소(3)를 가리킴
클론(2) 오브젝트도 똑같이 그 주소(3)를 가리킴
(가리키는 공간(3)을 복사)
키, 벨류 값을 바꾸는 경우 이 주소(3)를 가리키는 
오리지널(1)과 클론(2)이 같이 바뀌게 됨
